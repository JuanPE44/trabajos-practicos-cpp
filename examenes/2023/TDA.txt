

CLASS LISTA_R
BASIC CONSTRUCTORS iniciarLista, agrearInicio, agregarFinal 
IMPORTS boolean, natural, nodo
EFFETIVE
TYPE LISTA_R
OPERATIONS 
  iniciarLista: -> LISTA_R                    /c
  agregarInicio: LISTA_R * nodo -> LISTA_R    /c
  agregarFinal: LISTA_R * nodo -> LISTA_R     /c
  eliminarUltimo: LISTA_R -> LISTA_R          /m
    pre: not isVacia(l)
  obtenerNodo: LISTA_R * natural -> nodo      /o
    pre: not isVacia(l) and isRango(l,i)
  isVacia: LISTA_R -> boolean                 /o
  size: LISTA_R -> natural                    /o
  isRango: LISTA_R * natural -> boolean       /o
    pre: not isVacia(l)           
AXIOMAS l:LISTA_R; n: nodo; i: natural;
  eliminarUltimo(agregarInicio(l,n)) = eliminarUltimo(l)
  eliminarUltimo(agregarFinal(l,n)) = l
  obtenerNodo(agrearInicio(l,n), i) = obtenerNodo(l,i)
  obtenerNodo(agregarFinal(l,n), i) = obtenerNodo(l,i)
  isVacia(iniciarLista()) = True
  isVacia(agrearFinal(l,n)) = False
  isVacia(agrearInicio(l,n)) = False
  size(iniciarLista()) = 0
  size(agrearInicio(l,n)) = size(l) 
  size(agrearFinal(l,n)) = size(l)
  isRango(agregarInicio(l,n),i) = isRango(i)
  isRango(agregarFinal(l,n),i) = isRango(i)
END-CLASS

// PREGUNTAS

// En un arreglo con tamaño definido, ese tamaño es el dominio? agregarElemento es un contructor?
// Como funciona imports? datos de entrada o datos que me van a retornar? 
// pre siempre es necesario? no tener un pre puede romper algo?
// A que nivel se aplica la encapsulacion? aca se define la encapsulacion? como trabajarla?
// Al pasar a c++ en el template hay que definir las funciones?
// Que es el header? entra en el parcial?
// Teoria de TDA puede entrar al parcial?
// Hay que saber de memoria quicksort y mergesort

// Los if en los axiomas se usan en los arboles normalmente? cuando hay que usarlos?