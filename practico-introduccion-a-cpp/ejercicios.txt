ANÁLISIS Y DISEÑO DE ALGORITMOS I
Ejercicios lenguaje C++:

1. Escribir un programa que imprima el mensaje “Hola mundo” por pantalla.

2. Escribir un programa que lea dos números ingresados por teclado (separados por un espacio ‘ ‘), los
multiplique e imprima el resultado por pantalla.

3. Escribir un programa que lea dos cadenas de caracteres ingresadas por teclado (separadas por un
espacio ‘ ‘), las concatene e imprima el resultado por pantalla.

4. Dada la ecuación de segundo grado: ax2 + bx + c, al calcular el discriminante discr = b2 - 4ac, se
pueden presentar tres casos distintos:
Si discr > 0.0, las dos raíces son reales y distintas, y valen:
x1= (-b + (discr)1/2 ) / (2a) y x2 = (-b - (discr)1/2 ) / (2a).
Si discr = 0.0, las dos raíces son reales e iguales, y valen:
x1 = x2 = -b / (2a)
Si discr < 0.0, las dos raíces son complejas conjugadas. Las partes real e imaginaria valen:
xr = -b / (2a) y xi = (-discr)1/2 / (2a)
Codificar un programa que permita obtener las raíces de una ecuación de segundo grado, sabiendo
que los valores a, b y c deben ser ingresados por el usuario.

5. Un banco establece una tasa de interés para un fondo de inversión del 35% anual con pagos
mensuales; es decir, que cada mes se deposita en la cuenta del inversor el porcentaje de ganancia de
ese mes y se considera el total acumulado para el porcentaje del mes siguiente. Escriba un programa
que dado un monto y un plazo de vigencia del fondo calcule la rentabilidad esperada. Por ejemplo: si
se depositan $10.000 a 60 días la rentabilidad será de $591 aproximadamente al vencimiento del
plazo.

6. Argumentos al programa: Escribir un programa que lea un mensaje desde el teclado, reemplace un
carácter por otro e imprima el mensaje resultante por pantalla. El reemplazo de caracteres se realizará
de acuerdo a los parámetros que recibirá la función main desde la línea de comandos (Por ejemplo:
<proyecto.exe> A B, para reemplazar cada ocurrencia de A por B).
Se debe validar (y notificar) si no se pasan los argumentos esperados.

7. Escribir una función que reciba como parámetro un arreglo de N números naturales, busque el
elemento “mayoría” y retorne si existe el elemento mayoría y, en caso positivo, la cantidad de veces
que aparece en el arreglo. El elemento mayoría es aquel que aparece más de N/2 veces en el arreglo.

8. Escribir un programa que permita cargar un arreglo de números enteros a partir de información
provista por el usuario, y luego visualice estos valores pero en el orden inverso al ingresado.
Entrada al programa: dos líneas de texto que indican la cantidad de valores a ingresar y los valores en
sí, separados por un espacio. Por ejemplo:
5
10 2 3 1 7
Salida del programa: los valores, separados por un espacio, en el orden inverso al ingresado.
7 1 3 2 10

9. Escribir una función que permita determinar si un número entero dado es primo o no. Escribir un
programa que verifique si cada uno de los números almacenados en un arreglo son números primos.